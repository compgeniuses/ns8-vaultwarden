#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later

import os
import json
import sys
import agent
import secrets
import pyargon2
import binascii
import subprocess

data = json.load(sys.stdin)

# Generate a random hex string of length 40
def generate_random_hex(length):
    random_bytes = secrets.token_bytes(length)
    random_hex = binascii.hexlify(random_bytes).decode('utf-8')
    return random_hex

# Generate a random admin token
VAULTWARDEN_ADMIN_TOKEN = generate_random_hex(20)

# Hash the admin token using Argon2
hashed_admin_token = pyargon2.hash.hash_password(VAULTWARDEN_ADMIN_TOKEN)

# Set the environment variable
agent.set_env("ADMIN_TOKEN", hashed_admin_token)

#======= Attempt using sub Proc========
# Execute the command to hash the admin token using Argon2 and print the result
proc = subprocess.Popen(
    ["echo", "-n", VAULTWARDEN_ADMIN_TOKEN],
    stdout=subprocess.PIPE,
)
hashed_admin_token = subprocess.check_output(
    ["argon2", "$(openssl rand -base64 32)", "-e", "-id", "-k", "65540", "-t", "3", "-p", "4"],
    stdin=proc.stdout,
    text=True
)

# Set the environment variable
agent.set_env("ADMIN_TOKEN", hashed_admin_token.strip())

# Make sure everything is saved inside the environment file
# just before starting systemd unit
agent.dump_env()
